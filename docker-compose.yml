version: '3.8'

services:
    nginx:
        build:
            context: .
            dockerfile: nginx.dockerfile
        ports:
            - 8080:80
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
            - redis
            - php
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-33306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - mysqldata:/var/lib/mysql
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
            retries: 3
            timeout: 5s
        env_file:
            - .env
    redis:
        image: redis:5.0-alpine
        command: redis-server --appendonly yes
        volumes:
            - redisdata:/data
        ports:
            - "16379:6379"
    php:
        build:
            context: .
            dockerfile: php.dockerfile
        volumes:
            - .:/var/www/html
        env_file:
            - .env
    composer:
        build:
            context: .
            dockerfile: php.dockerfile
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        env_file:
            - .env
        entrypoint: ["composer"]
    artisan:
        build:
            context: .
            dockerfile: php.dockerfile
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        depends_on:
            mysql:
                condition: service_healthy

        env_file:
            - .env
        entrypoint: ["php", "/var/www/html/artisan"]
    npm:
        image: node:17.6.0-alpine
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        entrypoint: ["npm"]
    phpmyadmin:
        depends_on:
            - mysql
        image: phpmyadmin/phpmyadmin
        restart: always
        ports:
            - 8088:80
        environment:
            PMA_HOST: mysql
            UPLOAD_LIMIT: 3000000000
            GC_MAXLIFETIME: -1
            PMA_USER: '${DB_USERNAME}'
            PMA_PASSWORD: '${DB_PASSWORD}'
    mailhog:
        image: mailhog/mailhog
        ports:
            - 1025:1025 # smtp server
            - 8025:8025 # web ui

volumes:
    mysqldata: {}
    redisdata: {}
